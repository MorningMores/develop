name: E2E Tests (Cypress)

on:
  push:
    branches: [ main ]
    paths:
      - 'main_frontend/concert1/**'
      - 'main_backend/**'
      - 'docker-compose.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'main_frontend/concert1/**'
      - 'main_backend/**'
      - 'docker-compose.yml'

jobs:
  e2e-cypress:
    name: E2E Tests with Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v5

      - name: 🔧 Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: 'main_frontend/concert1/package-lock.json'

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 💾 Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('main_backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 📦 Install frontend dependencies
        working-directory: main_frontend/concert1
        run: |
          npm ci
          # Verify TypeScript is installed for Cypress
          npx tsc --version

      - name: 🐳 Start full stack (MySQL + Backend via Docker Compose)
        run: |
          docker compose up -d mysql backend
          echo "⏳ Waiting for backend to be healthy..."
          for i in {1..90}; do
            if curl -sf http://localhost:8080/actuator/health | grep -q 'UP'; then
              echo "✅ Backend is ready!"
              break
            fi
            echo "Attempt $i/90..."
            sleep 2
          done
          
          # Verify backend is actually ready
          curl -f http://localhost:8080/actuator/health

      - name: 🚀 Start frontend dev server
        working-directory: main_frontend/concert1
        run: |
          npm run dev &
          echo $! > /tmp/nuxt.pid
          echo "⏳ Waiting for frontend to be ready..."
          for i in {1..60}; do
            if curl -sf http://localhost:3000/ >/dev/null 2>&1; then
              echo "✅ Frontend is ready!"
              exit 0
            fi
            echo "Attempt $i/60..."
            sleep 2
          done
          echo "❌ Frontend failed to start!"
          exit 1

      - name: 🧪 Run Cypress E2E tests with coverage
        working-directory: main_frontend/concert1
        run: npm run test:e2e

      - name: 📊 Generate coverage report
        if: always()
        working-directory: main_frontend/concert1
        run: |
          if [ -d "coverage" ]; then
            npx nyc report --reporter=html --reporter=lcov || true
          fi

      - name: 📤 Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: main_frontend/concert1/cypress/screenshots
          if-no-files-found: ignore

      - name: 📤 Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: main_frontend/concert1/cypress/videos
          if-no-files-found: ignore

      - name: 📤 Upload E2E coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./main_frontend/concert1/coverage/lcov.info
          flags: e2e
          name: e2e-coverage
        continue-on-error: true

      - name: 📋 Show backend logs
        if: failure()
        run: docker compose logs backend

      - name: 🧹 Cleanup
        if: always()
        run: |
          # Stop frontend
          if [ -f /tmp/nuxt.pid ]; then
            kill $(cat /tmp/nuxt.pid) || true
          fi
          
          # Stop Docker services
          docker compose down -v
