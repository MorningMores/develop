name: Full Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'main_backend/**'
      - 'main_frontend/concert1/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'main_backend/**'
      - 'main_frontend/concert1/**'
      - '.github/workflows/**'

jobs:
  backend-unit-tests:
    name: Backend Unit Tests (Maven)
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('main_backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Maven unit tests
        working-directory: main_backend
        run: mvn -B clean test

      - name: Generate JaCoCo report
        if: always()
        working-directory: main_backend
        run: mvn jacoco:report

      - name: Upload backend coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./main_backend/target/site/jacoco/jacoco.xml
          flags: backend-unit
          name: backend-unit-coverage
        continue-on-error: true

      - name: Upload backend test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-unit-reports
          path: main_backend/target/surefire-reports/

  integration-tests:
    name: Integration Tests (GitHub Actions)
    runs-on: ubuntu-latest
    needs: backend-unit-tests
    timeout-minutes: 25

    services:
      docker:
        image: docker:24-dind
        options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: main_frontend/concert1/package-lock.json

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('main_backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Pre-pull MySQL image
        run: docker pull mysql:8.0

      - name: Run backend integration tests
        working-directory: main_backend
        env:
          TESTCONTAINERS_RYUK_DISABLED: false
        run: mvn -B -DforkCount=1 -DreuseForks=false clean test

      - name: Generate JaCoCo report
        if: always()
        working-directory: main_backend
        run: mvn jacoco:report

      - name: Upload integration test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-reports
          path: main_backend/target/surefire-reports/

      - name: Upload integration coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./main_backend/target/site/jacoco/jacoco.xml
          flags: integration
          name: integration-coverage
        continue-on-error: true

      - name: Install frontend dependencies (cached)
        working-directory: main_frontend/concert1
        run: npm ci

  e2e-tests:
    name: E2E Coverage (Cypress)
    runs-on: ubuntu-latest
    needs: integration-tests
    timeout-minutes: 35

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: main_frontend/concert1/package-lock.json

      - name: Install frontend dependencies
        working-directory: main_frontend/concert1
        run: |
          npm ci
          npx tsc --version

      - name: Start backend and database
        run: |
          docker compose up -d mysql backend
          echo "Waiting for backend..."
          for i in {1..90}; do
            if curl -sf http://localhost:8080/actuator/health | grep -q 'UP'; then
              echo "Backend ready"
              break
            fi
            sleep 2
          done
          curl -f http://localhost:8080/actuator/health

      - name: Start frontend dev server
        working-directory: main_frontend/concert1
        run: |
          npm run dev &
          echo $! > /tmp/nuxt.pid
          echo "Waiting for frontend..."
          for i in {1..60}; do
            if curl -sf http://localhost:3000/ >/dev/null 2>&1; then
              echo "Frontend ready"
              exit 0
            fi
            sleep 2
          done
          echo "Frontend failed to start"
          exit 1

      - name: Run Cypress tests
        working-directory: main_frontend/concert1
        run: npm run test:e2e

      - name: Generate Cypress coverage
        if: always()
        working-directory: main_frontend/concert1
        run: |
          if [ -d "coverage" ]; then
            npx nyc report --reporter=html --reporter=lcov || true
          fi

      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: main_frontend/concert1/cypress/videos
          if-no-files-found: ignore

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: main_frontend/concert1/cypress/screenshots
          if-no-files-found: ignore

      - name: Upload E2E coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./main_frontend/concert1/coverage/lcov.info
          flags: e2e
          name: e2e-coverage
        continue-on-error: true

      - name: Show backend logs on failure
        if: failure()
        run: docker compose logs backend

      - name: Cleanup services
        if: always()
        run: |
          if [ -f /tmp/nuxt.pid ]; then
            kill $(cat /tmp/nuxt.pid) || true
          fi
          docker compose down -v
